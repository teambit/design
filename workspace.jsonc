/**
 * this is the main configuration file of your bit workspace.
 * for full documentation, please see: https://docs.bit.dev/configuration
 **/{
  "$schema": "",
  /**
   * main configuration of the Bit workspace.
   **/
  "teambit.workspace/workspace": {
    "name": "design",
    /**
     * set the default scope when there is no matching for the component in the components array.
     **/
    "defaultScope": "teambit.design",
    /**
     * set the default directory when there is no matching for the component in the components array.
     **/
    "defaultDirectory": "src/{name}",
    "vendorDirectory": "vendor"
  },
  /**
   * main configuration for component dependency resolution.
   **/
  "teambit.dependencies/dependency-resolver": {
    /**
     * choose the package manager for Bit to use. you can choose between 'npm', 'yarn', 'pnpm'
     */
    "packageManager": "teambit.dependencies/pnpm",
    "policy": {
      "dependencies": {
        "@babel/runtime": "7.14.5",
        "@teambit/base-react.navigation.link": "2.0.27",
        "@teambit/base-react.themes.theme-switcher": "1.0.2",
        "@teambit/base-ui.css-components.elevation": "1.0.1",
        "@teambit/base-ui.css-components.roundness": "1.0.0",
        "@teambit/base-ui.elements.icon": "^1.0.0",
        "@teambit/base-ui.input.button": "^1.0.5",
        "@teambit/base-ui.input.checkbox.label": "^1.0.4",
        "@teambit/base-ui.styles.flex-center": "^1.0.0",
        "@teambit/base-ui.surfaces.abs-container": "^1.0.1",
        "@teambit/base-ui.surfaces.background": "1.0.2",
        "@teambit/base-ui.surfaces.card": "1.0.3",
        "@teambit/base-ui.surfaces.drawer": "1.0.1",
        "@teambit/base-ui.text.heading": "^1.0.0",
        "@teambit/base-ui.text.text-sizes": "^1.0.0",
        "@teambit/base-ui.theme.accent-color": "^1.1.0",
        "@teambit/base-ui.theme.dark-theme": "^1.0.2",
        "@teambit/base-ui.theme.fonts.roboto": "^1.0.0",
        "@teambit/base-ui.theme.theme-provider": "^1.0.0",
        "@teambit/base-ui.time.duration": "0.1.0",
        "@teambit/design.surfaces.dropdown": "0.0.16",
        "@teambit/design.themes.base-theme": "0.1.0",
        "@teambit/design.ui.styles.ellipsis": "0.0.344",
        "@teambit/design.ui.surfaces.menu.item": "0.0.354",
        "@teambit/evangelist.css-components.fade-in-out": "1.0.1",
        "@teambit/evangelist.input.checkbox.label": "1.0.10",
        "@testing-library/react": "11.2.2",
        "@types/jest": "^26.0.0",
        "@types/node": "15.12.2",
        "@types/react": "^17.0.8",
        "@types/react-router-dom": "5.1.7",
        "@types/react-tabs": "2.3.2",
        "@types/react-tooltip": "3.11.0",
        "@types/testing-library__jest-dom": "5.9.5",
        "@types/uuid": "3.4.9",
        "classnames": "^2.2.6",
        "core-js": "3.7.0",
        "react-tabs": "3.2.0",
        "react-tooltip": "3.11.6",
        "reset-css": "5.0.1",
        "typescript": "^4.0.0",
        "uuid": "3.4.0"
      },
      "peerDependencies": {
        "react": "^16.8.0 || ^17.0.0",
        "react-dom": "^16.8.0 || ^17.0.0"
      }
    },
    "packageManagerArgs": [],
    "devFilePatterns": [
      "**/*.spec.ts"
    ],
    // "devFilePatterns": [
    //   "*.spec.ts"
    // ],
    /**
     * If true, then Bit will add the "--strict-peer-dependencies" option when invoking package managers.
     * This causes "bit install" to fail if there are unsatisfied peer dependencies, which is
     * an invalid state that can cause build failures or incompatible dependency versions.
     * (For historical reasons, JavaScript package managers generally do not treat this invalid
     * state as an error.)
     *
     * The default value is false to avoid legacy compatibility issues.
     * It is strongly recommended to set strictPeerDependencies=true.
     */
    "strictPeerDependencies": true,
    "installFromBitDevRegistry": true,
    "savePrefix": "",
    /**
     * map of extra arguments to pass to the configured package manager upon the installation
     * of dependencies.
     */
    "extraArgs": []
  },
  /**
   * workspace variants allow to set different subsets of configuration for components in your workspace.
   * this is extremely useful for upgrading, aligning and building components with a
   * new set of dependencies.
   **/
  "teambit.workspace/variants": {
    "*": {
      "teambit.react/react": {},
      "teambit.symphony/envs/symphony-react": "-",
      "teambit.symphony/envs/node": "-",
      "teambit.harmony/node": "-"
    },
    "{envs/**}": {
      "teambit.react/react": "-",
      "teambit.harmony/aspect": {}
    },
    "src/ui, src/inputs": {
      "teambit.dependencies/dependency-resolver": {}, // (remove leftover deps config from symphony)
      "teambit.design/envs/react": {},
      "teambit.envs/envs": {
        "env": "teambit.design/envs/react"
      },
      "teambit.react/react": "-",
      "teambit.symphony/envs/symphony-react": "-",
      "teambit.symphony/envs/node": "-",
      "teambit.pkg/pkg": {
        "packageManagerPublishArgs": [
          "--access public"
        ],
        "packageJson": {
          "name": "@teambit/{scope}.{name}",
          "private": false
        }
      }
    }
  }
}